name: CI/CD


on:
  push:
    branches:
      - 'main'
  
jobs:
  test-docker-image:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

    steps:
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - 
        name: Build image for testing
        uses: docker/build-push-action@v5
        with:
          load: true
          tags: test
      - 
        name: Test
        run: |
          docker run --rm \
            --network ${{ job.services.postgres.network }} \
            -e POSTGRES_DB=test_db \
            -e POSTGRES_USER=postgres \
            -e POSTGRES_PASSWORD=postgres \
            -e POSTGRES_HOST=postgres \
            -e POSTGRES_PORT=5432 \
            test pytest

  release-docker-image:
    needs: test-docker-image
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tooth-ease-kids:latest

  deploy:
    needs: release-docker-image
    runs-on: ubuntu-latest
    environment: staging

    steps:
      - 
        name: Checkout
        uses: actions/checkout@v4
      - 
        name: SCP Nginx Config
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: "nginx/default.conf.template"
          target: "/home/${{ secrets.EC2_USER }}/tooth-ease-kids/nginx/config"
          strip_components: 1
      - name: SCP DockerCompose
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: "docker-compose-staging.yaml"
          target: "/home/${{ secrets.EC2_USER }}/tooth-ease-kids/"
      - name: Deploy Containers
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            cd tooth-ease-kids
            docker-compose -f "docker-compose-staging.yaml" pull
            docker-compose -f "docker-compose-staging.yaml" up  -d